// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.inject;

import androidx.fragment.app.Fragment;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerFragmentFactory_Factory implements Factory<DaggerFragmentFactory> {
  private final Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> fragmentProvidersProvider;

  public DaggerFragmentFactory_Factory(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> fragmentProvidersProvider) {
    this.fragmentProvidersProvider = fragmentProvidersProvider;
  }

  @Override
  public DaggerFragmentFactory get() {
    return newInstance(fragmentProvidersProvider.get());
  }

  public static DaggerFragmentFactory_Factory create(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> fragmentProvidersProvider) {
    return new DaggerFragmentFactory_Factory(fragmentProvidersProvider);
  }

  public static DaggerFragmentFactory newInstance(
      Map<Class<? extends Fragment>, Provider<Fragment>> fragmentProviders) {
    return new DaggerFragmentFactory(fragmentProviders);
  }
}
