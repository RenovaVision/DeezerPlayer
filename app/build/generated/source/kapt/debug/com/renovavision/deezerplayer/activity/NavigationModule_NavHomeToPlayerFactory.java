// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.activity;

import com.renovavision.deezerplayer.domain.entities.PlayerModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import kotlin.Unit;
import kotlin.jvm.functions.Function1;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NavigationModule_NavHomeToPlayerFactory implements Factory<Function1<PlayerModel, Unit>> {
  private final Provider<MainActivity> mainActivityProvider;

  public NavigationModule_NavHomeToPlayerFactory(Provider<MainActivity> mainActivityProvider) {
    this.mainActivityProvider = mainActivityProvider;
  }

  @Override
  public Function1<PlayerModel, Unit> get() {
    return navHomeToPlayer(mainActivityProvider.get());
  }

  public static NavigationModule_NavHomeToPlayerFactory create(
      Provider<MainActivity> mainActivityProvider) {
    return new NavigationModule_NavHomeToPlayerFactory(mainActivityProvider);
  }

  public static Function1<PlayerModel, Unit> navHomeToPlayer(MainActivity mainActivity) {
    return Preconditions.checkNotNull(NavigationModule.INSTANCE.navHomeToPlayer(mainActivity), "Cannot return null from a non-@Nullable @Provides method");
  }
}
