// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.tracks;

import androidx.lifecycle.ViewModelProvider;
import com.renovavision.deezerplayer.domain.entities.ArtistEntity;
import com.renovavision.deezerplayer.domain.entities.PlayerModel;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlin.Unit;
import kotlin.jvm.functions.Function1;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TopTracksFragment_Factory implements Factory<TopTracksFragment> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<Function1<ArtistEntity, Unit>> navTopTracksToArtistProvider;

  private final Provider<Function1<PlayerModel, Unit>> navTopTracksToPlayerProvider;

  public TopTracksFragment_Factory(Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<Function1<ArtistEntity, Unit>> navTopTracksToArtistProvider,
      Provider<Function1<PlayerModel, Unit>> navTopTracksToPlayerProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.navTopTracksToArtistProvider = navTopTracksToArtistProvider;
    this.navTopTracksToPlayerProvider = navTopTracksToPlayerProvider;
  }

  @Override
  public TopTracksFragment get() {
    return newInstance(viewModelFactoryProvider.get(), navTopTracksToArtistProvider.get(), navTopTracksToPlayerProvider.get());
  }

  public static TopTracksFragment_Factory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<Function1<ArtistEntity, Unit>> navTopTracksToArtistProvider,
      Provider<Function1<PlayerModel, Unit>> navTopTracksToPlayerProvider) {
    return new TopTracksFragment_Factory(viewModelFactoryProvider, navTopTracksToArtistProvider, navTopTracksToPlayerProvider);
  }

  public static TopTracksFragment newInstance(ViewModelProvider.Factory viewModelFactory,
      Function1<ArtistEntity, Unit> navTopTracksToArtist,
      Function1<PlayerModel, Unit> navTopTracksToPlayer) {
    return new TopTracksFragment(viewModelFactory, navTopTracksToArtist, navTopTracksToPlayer);
  }
}
