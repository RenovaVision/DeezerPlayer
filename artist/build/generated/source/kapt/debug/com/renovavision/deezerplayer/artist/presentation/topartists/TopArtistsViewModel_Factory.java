// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.artist.presentation.topartists;

import com.renovavision.deezerplayer.domain.usecases.GetHomeModel;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TopArtistsViewModel_Factory implements Factory<TopArtistsViewModel> {
  private final Provider<GetHomeModel> useCaseProvider;

  public TopArtistsViewModel_Factory(Provider<GetHomeModel> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public TopArtistsViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static TopArtistsViewModel_Factory create(Provider<GetHomeModel> useCaseProvider) {
    return new TopArtistsViewModel_Factory(useCaseProvider);
  }

  public static TopArtistsViewModel newInstance(GetHomeModel useCase) {
    return new TopArtistsViewModel(useCase);
  }
}
