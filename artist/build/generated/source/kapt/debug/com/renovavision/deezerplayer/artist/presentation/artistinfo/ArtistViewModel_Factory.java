// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.artist.presentation.artistinfo;

import com.renovavision.deezerplayer.domain.usecases.GetArtistModel;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ArtistViewModel_Factory implements Factory<ArtistViewModel> {
  private final Provider<GetArtistModel> useCaseProvider;

  public ArtistViewModel_Factory(Provider<GetArtistModel> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public ArtistViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static ArtistViewModel_Factory create(Provider<GetArtistModel> useCaseProvider) {
    return new ArtistViewModel_Factory(useCaseProvider);
  }

  public static ArtistViewModel newInstance(GetArtistModel useCase) {
    return new ArtistViewModel(useCase);
  }
}
