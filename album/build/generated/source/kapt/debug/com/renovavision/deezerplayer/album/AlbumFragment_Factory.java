// Generated by Dagger (https://dagger.dev).
package com.renovavision.deezerplayer.album;

import androidx.lifecycle.ViewModelProvider;
import com.renovavision.deezerplayer.domain.entities.PlayerModel;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlin.Unit;
import kotlin.jvm.functions.Function1;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AlbumFragment_Factory implements Factory<AlbumFragment> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<Function1<PlayerModel, Unit>> navAlbumToPlayerProvider;

  public AlbumFragment_Factory(Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<Function1<PlayerModel, Unit>> navAlbumToPlayerProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.navAlbumToPlayerProvider = navAlbumToPlayerProvider;
  }

  @Override
  public AlbumFragment get() {
    return newInstance(viewModelFactoryProvider.get(), navAlbumToPlayerProvider.get());
  }

  public static AlbumFragment_Factory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<Function1<PlayerModel, Unit>> navAlbumToPlayerProvider) {
    return new AlbumFragment_Factory(viewModelFactoryProvider, navAlbumToPlayerProvider);
  }

  public static AlbumFragment newInstance(ViewModelProvider.Factory viewModelFactory,
      Function1<PlayerModel, Unit> navAlbumToPlayer) {
    return new AlbumFragment(viewModelFactory, navAlbumToPlayer);
  }
}
