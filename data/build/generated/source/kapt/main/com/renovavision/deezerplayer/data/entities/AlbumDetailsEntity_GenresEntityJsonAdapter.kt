// Code generated by moshi-kotlin-codegen. Do not edit.
package com.renovavision.deezerplayer.data.entities

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class AlbumDetailsEntity_GenresEntityJsonAdapter(
  moshi: Moshi
) : JsonAdapter<AlbumDetailsEntity.GenresEntity>() {
  private val options: JsonReader.Options = JsonReader.Options.of("data")

  private val listOfGenreEntityAdapter:
      JsonAdapter<List<AlbumDetailsEntity.GenresEntity.GenreEntity>> =
      moshi.adapter(Types.newParameterizedType(List::class.java,
      AlbumDetailsEntity.GenresEntity.GenreEntity::class.java), emptySet(), "data")

  override fun toString(): String = buildString(53) {
      append("GeneratedJsonAdapter(").append("AlbumDetailsEntity.GenresEntity").append(')') }

  override fun fromJson(reader: JsonReader): AlbumDetailsEntity.GenresEntity {
    var data: List<AlbumDetailsEntity.GenresEntity.GenreEntity>? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> data = listOfGenreEntityAdapter.fromJson(reader) ?: throw Util.unexpectedNull("data",
            "data", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return AlbumDetailsEntity.GenresEntity(
        data = data ?: throw Util.missingProperty("data", "data", reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: AlbumDetailsEntity.GenresEntity?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("data")
    listOfGenreEntityAdapter.toJson(writer, value.data)
    writer.endObject()
  }
}
